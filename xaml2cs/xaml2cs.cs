using System;
using System.Collections.Generic;
using System.IO;
using System.Xml;

class Xaml2Cs
{
	public Xaml2Cs ()
	{
		types = new Dictionary<string,XamlType>();

		types["ToolBar"] = new XamlType("System.Windows.Controls", "ToolBar");

		elements_by_local = new Dictionary<string,XamlElement>();
	}

	class XamlType
	{
		public string ns;
		public string name;

		public XamlType(string ns, string name)
		{
			this.ns = ns;
			this.name = name;
		}
	}

	Dictionary<string, XamlType> types;

	class XamlElement
	{
		public XamlType type;
		public XamlElement parent;
		public string local_name;
		public string class_name;
	}

	XamlElement root_element;
	
	Dictionary<string, XamlElement> elements_by_local;

	public void ReadXaml(string filename, string[] references)
	{
		XamlElement current = null;
		using (var reader = XmlReader.Create(filename))
		{
			while (reader.Read())
			{
				if (reader.NodeType == XmlNodeType.Element)
				{
					var parent = current;
					current = new XamlElement();
					current.parent = parent;
					string local_name;
					if (root_element == null)
					{
						root_element = current;
					}
					if (!types.TryGetValue(reader.Name, out current.type))
					{
						throw new NotImplementedException(String.Format("type {0}", reader.Name));
					}
					if (reader.GetAttribute("x:Name") != null &&
						!elements_by_local.ContainsKey(reader.GetAttribute("x:Name")))
					{
						local_name = reader.GetAttribute("x:Name");
					}
					else if (reader.GetAttribute("x:Uid") != null &&
						!elements_by_local.ContainsKey(reader.GetAttribute("x:Uid")))
					{
						local_name = reader.GetAttribute("x:Uid");
					}
					else
					{
						int i = 0;
						do
						{
							local_name = String.Format("{0}{1}", current.type.name.ToLower(), i);
						} while (elements_by_local.ContainsKey(local_name));
					}
					current.local_name = local_name;
					elements_by_local[local_name] = current;
					if (reader.MoveToFirstAttribute())
					{
						do {
							bool handled_attribute = false;
							switch (reader.Name)
							{
							case "xmlns":
							case "xmlns:x":
							case "xmlns:ui":
							case "xml:lang":
								// Ignore
								handled_attribute = true;
								break;
							case "x:Class":
								current.class_name = reader.Value;
								handled_attribute = true;
								break;
							}
							if (!handled_attribute)
							{
								throw new NotImplementedException(String.Format("type {0}", reader.Name));
							}
						} while (reader.MoveToNextAttribute());
					}
				}
			}
		}
	}

	public void WriteCs(TextWriter f)
	{
		f.WriteLine("// This file was generated by xaml2cs");
		f.WriteLine();

		string ns = null;
		string class_name = null;

		int i = root_element.class_name.LastIndexOf(".");
		ns = root_element.class_name.Substring(0, i-1);
		class_name = root_element.class_name.Substring(i+1);

		Console.WriteLine("namespace {0} {{", ns);
		Console.WriteLine("class {0} {{", class_name);
		Console.WriteLine("}"); // end class
		Console.WriteLine("}"); // end namespace
	}

	public static void Main(string[] arguments)
	{
		var instance = new Xaml2Cs();

		var filename = arguments[0];
		var references = new string[0]; // FIXME

		try
		{
			instance.ReadXaml(filename, references);
		}
		finally
		{
			// Temporary, for testing as we go.
			instance.WriteCs(System.Console.Out);
		}
	}
}
